/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./js/main.js":
/*!********************!*\
  !*** ./js/main.js ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction getFocusableElements(container) {\n  return Array.from(container.querySelectorAll(\"summary, a[href], button:enabled, [tabindex]:not([tabindex^='-']), [draggable], area, input:not([type=hidden]):enabled, select:enabled, textarea:enabled, object, iframe\"));\n}\n\nvar trapFocusHandlers = {};\n\nfunction trapFocus(container) {\n  var elementToFocus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : container;\n  var elements = getFocusableElements(container);\n  var first = elements[0];\n  var last = elements[elements.length - 1];\n  removeTrapFocus();\n\n  trapFocusHandlers.focusin = function (event) {\n    if (event.target !== container && event.target !== last && event.target !== first) return;\n    document.addEventListener('keydown', trapFocusHandlers.keydown);\n  };\n\n  trapFocusHandlers.focusout = function () {\n    document.removeEventListener('keydown', trapFocusHandlers.keydown);\n  };\n\n  trapFocusHandlers.keydown = function (event) {\n    if (event.code.toUpperCase() !== 'TAB') return; // If not TAB key\n    // On the last focusable element and tab forward, focus the first element.\n\n    if (event.target === last && !event.shiftKey) {\n      event.preventDefault();\n      first.focus();\n    } //  On the first focusable element and tab backward, focus the last element.\n\n\n    if ((event.target === container || event.target === first) && event.shiftKey) {\n      event.preventDefault();\n      last.focus();\n    }\n  };\n\n  document.addEventListener('focusout', trapFocusHandlers.focusout);\n  document.addEventListener('focusin', trapFocusHandlers.focusin);\n  elementToFocus.focus();\n} // Here run the querySelector to figure out if the browser supports :focus-visible or not and run code based on it.\n\n\ntry {\n  document.querySelector(\":focus-visible\");\n} catch (_unused) {\n  focusVisiblePolyfill();\n}\n\nfunction focusVisiblePolyfill() {\n  var navKeys = ['ARROWUP', 'ARROWDOWN', 'ARROWLEFT', 'ARROWRIGHT', 'TAB', 'ENTER', 'SPACE', 'ESCAPE', 'HOME', 'END', 'PAGEUP', 'PAGEDOWN'];\n  var currentFocusedElement = null;\n  var mouseClick = null;\n  window.addEventListener('keydown', function (event) {\n    if (navKeys.includes(event.code.toUpperCase())) {\n      mouseClick = false;\n    }\n  });\n  window.addEventListener('mousedown', function (event) {\n    mouseClick = true;\n  });\n  window.addEventListener('focus', function () {\n    if (currentFocusedElement) currentFocusedElement.classList.remove('focused');\n    if (mouseClick) return;\n    currentFocusedElement = document.activeElement;\n    currentFocusedElement.classList.add('focused');\n  }, true);\n}\n\nfunction pauseAllMedia() {\n  document.querySelectorAll('.js-youtube').forEach(function (video) {\n    video.contentWindow.postMessage('{\"event\":\"command\",\"func\":\"' + 'pauseVideo' + '\",\"args\":\"\"}', '*');\n  });\n  document.querySelectorAll('.js-vimeo').forEach(function (video) {\n    video.contentWindow.postMessage('{\"method\":\"pause\"}', '*');\n  });\n  document.querySelectorAll('video').forEach(function (video) {\n    return video.pause();\n  });\n  document.querySelectorAll('product-model').forEach(function (model) {\n    if (model.modelViewerUI) modelViewerUI.pause();\n  });\n}\n\nfunction removeTrapFocus() {\n  var elementToFocus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  document.removeEventListener('focusin', trapFocusHandlers.focusin);\n  document.removeEventListener('focusout', trapFocusHandlers.focusout);\n  document.removeEventListener('keydown', trapFocusHandlers.keydown);\n  if (elementToFocus) elementToFocus.focus();\n}\n\nfunction onKeyUpEscape(event) {\n  if (event.code.toUpperCase() !== 'ESCAPE') return;\n  var openDetailsElement = event.target.closest('details[open]');\n  if (!openDetailsElement) return;\n  var summaryElement = openDetailsElement.querySelector('summary');\n  openDetailsElement.removeAttribute('open');\n  summaryElement.focus();\n}\n\nvar QuantityInput = /*#__PURE__*/function (_HTMLElement) {\n  _inherits(QuantityInput, _HTMLElement);\n\n  var _super = _createSuper(QuantityInput);\n\n  function QuantityInput() {\n    var _this;\n\n    _classCallCheck(this, QuantityInput);\n\n    _this = _super.call(this);\n    _this.input = _this.querySelector('input');\n    _this.changeEvent = new Event('change', {\n      bubbles: true\n    });\n\n    _this.querySelectorAll('button').forEach(function (button) {\n      return button.addEventListener('click', _this.onButtonClick.bind(_assertThisInitialized(_this)));\n    });\n\n    return _this;\n  }\n\n  _createClass(QuantityInput, [{\n    key: \"onButtonClick\",\n    value: function onButtonClick(event) {\n      event.preventDefault();\n      var previousValue = this.input.value;\n      event.target.name === 'plus' ? this.input.stepUp() : this.input.stepDown();\n      if (previousValue !== this.input.value) this.input.dispatchEvent(this.changeEvent);\n    }\n  }]);\n\n  return QuantityInput;\n}( /*#__PURE__*/_wrapNativeSuper(HTMLElement));\n\ncustomElements.define('quantity-input', QuantityInput);\n\nfunction debounce(fn, wait) {\n  var _this2 = this;\n\n  var t;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    clearTimeout(t);\n    t = setTimeout(function () {\n      return fn.apply(_this2, args);\n    }, wait);\n  };\n}\n\nvar serializeForm = function serializeForm(form) {\n  var obj = {};\n  var formData = new FormData(form);\n\n  var _iterator = _createForOfIteratorHelper(formData.keys()),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var key = _step.value;\n      var regex = /(?:^(properties\\[))(.*?)(?:\\]$)/;\n\n      if (regex.test(key)) {\n        obj.properties = obj.properties || {};\n        obj.properties[regex.exec(key)[2]] = formData.get(key);\n      } else {\n        obj[key] = formData.get(key);\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return JSON.stringify(obj);\n};\n\nfunction fetchConfig() {\n  var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'json';\n  return {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': \"application/\".concat(type)\n    }\n  };\n}\n/*\n * Shopify Common JS\n *\n */\n\n\nif (typeof window.Shopify == 'undefined') {\n  window.Shopify = {};\n}\n\nShopify.bind = function (fn, scope) {\n  return function () {\n    return fn.apply(scope, arguments);\n  };\n};\n\nShopify.setSelectorByValue = function (selector, value) {\n  for (var i = 0, count = selector.options.length; i < count; i++) {\n    var option = selector.options[i];\n\n    if (value == option.value || value == option.innerHTML) {\n      selector.selectedIndex = i;\n      return i;\n    }\n  }\n};\n\nShopify.addListener = function (target, eventName, callback) {\n  target.addEventListener ? target.addEventListener(eventName, callback, false) : target.attachEvent('on' + eventName, callback);\n};\n\nShopify.postLink = function (path, options) {\n  options = options || {};\n  var method = options['method'] || 'post';\n  var params = options['parameters'] || {};\n  var form = document.createElement(\"form\");\n  form.setAttribute(\"method\", method);\n  form.setAttribute(\"action\", path);\n\n  for (var key in params) {\n    var hiddenField = document.createElement(\"input\");\n    hiddenField.setAttribute(\"type\", \"hidden\");\n    hiddenField.setAttribute(\"name\", key);\n    hiddenField.setAttribute(\"value\", params[key]);\n    form.appendChild(hiddenField);\n  }\n\n  document.body.appendChild(form);\n  form.submit();\n  document.body.removeChild(form);\n};\n\nShopify.CountryProvinceSelector = function (country_domid, province_domid, options) {\n  this.countryEl = document.getElementById(country_domid);\n  this.provinceEl = document.getElementById(province_domid);\n  this.provinceContainer = document.getElementById(options['hideElement'] || province_domid);\n  Shopify.addListener(this.countryEl, 'change', Shopify.bind(this.countryHandler, this));\n  this.initCountry();\n  this.initProvince();\n};\n\nShopify.CountryProvinceSelector.prototype = {\n  initCountry: function initCountry() {\n    var value = this.countryEl.getAttribute('data-default');\n    Shopify.setSelectorByValue(this.countryEl, value);\n    this.countryHandler();\n  },\n  initProvince: function initProvince() {\n    var value = this.provinceEl.getAttribute('data-default');\n\n    if (value && this.provinceEl.options.length > 0) {\n      Shopify.setSelectorByValue(this.provinceEl, value);\n    }\n  },\n  countryHandler: function countryHandler(e) {\n    var opt = this.countryEl.options[this.countryEl.selectedIndex];\n    var raw = opt.getAttribute('data-provinces');\n    var provinces = JSON.parse(raw);\n    this.clearOptions(this.provinceEl);\n\n    if (provinces && provinces.length == 0) {\n      this.provinceContainer.style.display = 'none';\n    } else {\n      for (var i = 0; i < provinces.length; i++) {\n        var opt = document.createElement('option');\n        opt.value = provinces[i][0];\n        opt.innerHTML = provinces[i][1];\n        this.provinceEl.appendChild(opt);\n      }\n\n      this.provinceContainer.style.display = \"\";\n    }\n  },\n  clearOptions: function clearOptions(selector) {\n    while (selector.firstChild) {\n      selector.removeChild(selector.firstChild);\n    }\n  },\n  setOptions: function setOptions(selector, values) {\n    for (var i = 0, count = values.length; i < values.length; i++) {\n      var opt = document.createElement('option');\n      opt.value = values[i];\n      opt.innerHTML = values[i];\n      selector.appendChild(opt);\n    }\n  }\n};\n\nvar MenuDrawer = /*#__PURE__*/function (_HTMLElement2) {\n  _inherits(MenuDrawer, _HTMLElement2);\n\n  var _super2 = _createSuper(MenuDrawer);\n\n  function MenuDrawer() {\n    var _this3;\n\n    _classCallCheck(this, MenuDrawer);\n\n    _this3 = _super2.call(this);\n    _this3.mainDetailsToggle = _this3.querySelector('details');\n\n    var summaryElements = _this3.querySelectorAll('summary');\n\n    _this3.addAccessibilityAttributes(summaryElements);\n\n    if (navigator.platform === 'iPhone') document.documentElement.style.setProperty('--viewport-height', \"\".concat(window.innerHeight, \"px\"));\n\n    _this3.addEventListener('keyup', _this3.onKeyUp.bind(_assertThisInitialized(_this3)));\n\n    _this3.addEventListener('focusout', _this3.onFocusOut.bind(_assertThisInitialized(_this3)));\n\n    _this3.bindEvents();\n\n    return _this3;\n  }\n\n  _createClass(MenuDrawer, [{\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      var _this4 = this;\n\n      this.querySelectorAll('summary').forEach(function (summary) {\n        return summary.addEventListener('click', _this4.onSummaryClick.bind(_this4));\n      });\n      this.querySelectorAll('button').forEach(function (button) {\n        return button.addEventListener('click', _this4.onCloseButtonClick.bind(_this4));\n      });\n    }\n  }, {\n    key: \"addAccessibilityAttributes\",\n    value: function addAccessibilityAttributes(summaryElements) {\n      summaryElements.forEach(function (element) {\n        element.setAttribute('role', 'button');\n        element.setAttribute('aria-expanded', false);\n        element.setAttribute('aria-controls', element.nextElementSibling.id);\n      });\n    }\n  }, {\n    key: \"onKeyUp\",\n    value: function onKeyUp(event) {\n      if (event.code.toUpperCase() !== 'ESCAPE') return;\n      var openDetailsElement = event.target.closest('details[open]');\n      if (!openDetailsElement) return;\n      openDetailsElement === this.mainDetailsToggle ? this.closeMenuDrawer(this.mainDetailsToggle.querySelector('summary')) : this.closeSubmenu(openDetailsElement);\n    }\n  }, {\n    key: \"onSummaryClick\",\n    value: function onSummaryClick(event) {\n      var summaryElement = event.currentTarget;\n      var detailsElement = summaryElement.parentNode;\n      var isOpen = detailsElement.hasAttribute('open');\n\n      if (detailsElement === this.mainDetailsToggle) {\n        if (isOpen) event.preventDefault();\n        isOpen ? this.closeMenuDrawer(summaryElement) : this.openMenuDrawer(summaryElement);\n      } else {\n        trapFocus(summaryElement.nextElementSibling, detailsElement.querySelector('button'));\n        setTimeout(function () {\n          detailsElement.classList.add('menu-opening');\n        });\n      }\n    }\n  }, {\n    key: \"openMenuDrawer\",\n    value: function openMenuDrawer(summaryElement) {\n      var _this5 = this;\n\n      setTimeout(function () {\n        _this5.mainDetailsToggle.classList.add('menu-opening');\n      });\n      summaryElement.setAttribute('aria-expanded', true);\n      trapFocus(this.mainDetailsToggle, summaryElement);\n      document.body.classList.add(\"overflow-hidden-\".concat(this.dataset.breakpoint));\n    }\n  }, {\n    key: \"closeMenuDrawer\",\n    value: function closeMenuDrawer(event) {\n      var elementToFocus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (event !== undefined) {\n        this.mainDetailsToggle.classList.remove('menu-opening');\n        this.mainDetailsToggle.querySelectorAll('details').forEach(function (details) {\n          details.removeAttribute('open');\n          details.classList.remove('menu-opening');\n        });\n        this.mainDetailsToggle.querySelector('summary').setAttribute('aria-expanded', false);\n        document.body.classList.remove(\"overflow-hidden-\".concat(this.dataset.breakpoint));\n        removeTrapFocus(elementToFocus);\n        this.closeAnimation(this.mainDetailsToggle);\n      }\n    }\n  }, {\n    key: \"onFocusOut\",\n    value: function onFocusOut(event) {\n      var _this6 = this;\n\n      setTimeout(function () {\n        if (_this6.mainDetailsToggle.hasAttribute('open') && !_this6.mainDetailsToggle.contains(document.activeElement)) _this6.closeMenuDrawer();\n      });\n    }\n  }, {\n    key: \"onCloseButtonClick\",\n    value: function onCloseButtonClick(event) {\n      var detailsElement = event.currentTarget.closest('details');\n      this.closeSubmenu(detailsElement);\n    }\n  }, {\n    key: \"closeSubmenu\",\n    value: function closeSubmenu(detailsElement) {\n      detailsElement.classList.remove('menu-opening');\n      removeTrapFocus();\n      this.closeAnimation(detailsElement);\n    }\n  }, {\n    key: \"closeAnimation\",\n    value: function closeAnimation(detailsElement) {\n      var animationStart;\n\n      var handleAnimation = function handleAnimation(time) {\n        if (animationStart === undefined) {\n          animationStart = time;\n        }\n\n        var elapsedTime = time - animationStart;\n\n        if (elapsedTime < 400) {\n          window.requestAnimationFrame(handleAnimation);\n        } else {\n          detailsElement.removeAttribute('open');\n\n          if (detailsElement.closest('details[open]')) {\n            trapFocus(detailsElement.closest('details[open]'), detailsElement.querySelector('summary'));\n          }\n        }\n      };\n\n      window.requestAnimationFrame(handleAnimation);\n    }\n  }]);\n\n  return MenuDrawer;\n}( /*#__PURE__*/_wrapNativeSuper(HTMLElement));\n\ncustomElements.define('menu-drawer', MenuDrawer);\n\nvar HeaderDrawer = /*#__PURE__*/function (_MenuDrawer) {\n  _inherits(HeaderDrawer, _MenuDrawer);\n\n  var _super3 = _createSuper(HeaderDrawer);\n\n  function HeaderDrawer() {\n    _classCallCheck(this, HeaderDrawer);\n\n    return _super3.call(this);\n  }\n\n  _createClass(HeaderDrawer, [{\n    key: \"openMenuDrawer\",\n    value: function openMenuDrawer(summaryElement) {\n      var _this7 = this;\n\n      this.header = this.header || document.getElementById('shopify-section-header');\n      this.borderOffset = this.borderOffset || this.closest('.header-wrapper').classList.contains('header-wrapper--border-bottom') ? 1 : 0;\n      document.documentElement.style.setProperty('--header-bottom-position', \"\".concat(parseInt(this.header.getBoundingClientRect().bottom - this.borderOffset), \"px\"));\n      setTimeout(function () {\n        _this7.mainDetailsToggle.classList.add('menu-opening');\n      });\n      summaryElement.setAttribute('aria-expanded', true);\n      trapFocus(this.mainDetailsToggle, summaryElement);\n      document.body.classList.add(\"overflow-hidden-\".concat(this.dataset.breakpoint));\n    }\n  }]);\n\n  return HeaderDrawer;\n}(MenuDrawer);\n\ncustomElements.define('header-drawer', HeaderDrawer);\n\nvar ModalDialog = /*#__PURE__*/function (_HTMLElement3) {\n  _inherits(ModalDialog, _HTMLElement3);\n\n  var _super4 = _createSuper(ModalDialog);\n\n  function ModalDialog() {\n    var _this8;\n\n    _classCallCheck(this, ModalDialog);\n\n    _this8 = _super4.call(this);\n\n    _this8.querySelector('[id^=\"ModalClose-\"]').addEventListener('click', _this8.hide.bind(_assertThisInitialized(_this8)));\n\n    _this8.addEventListener('keyup', function (event) {\n      if (event.code.toUpperCase() === 'ESCAPE') _this8.hide();\n    });\n\n    if (_this8.classList.contains('media-modal')) {\n      _this8.addEventListener('pointerup', function (event) {\n        if (event.pointerType === 'mouse' && !event.target.closest('deferred-media, product-model')) _this8.hide();\n      });\n    } else {\n      _this8.addEventListener('click', function (event) {\n        if (event.target.nodeName === 'MODAL-DIALOG') _this8.hide();\n      });\n    }\n\n    return _this8;\n  }\n\n  _createClass(ModalDialog, [{\n    key: \"show\",\n    value: function show(opener) {\n      this.openedBy = opener;\n      var popup = this.querySelector('.template-popup');\n      document.body.classList.add('overflow-hidden');\n      this.setAttribute('open', '');\n      if (popup) popup.loadContent();\n      trapFocus(this, this.querySelector('[role=\"dialog\"]'));\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      document.body.classList.remove('overflow-hidden');\n      this.removeAttribute('open');\n      removeTrapFocus(this.openedBy);\n      window.pauseAllMedia();\n    }\n  }]);\n\n  return ModalDialog;\n}( /*#__PURE__*/_wrapNativeSuper(HTMLElement));\n\ncustomElements.define('modal-dialog', ModalDialog);\n\nvar ModalOpener = /*#__PURE__*/function (_HTMLElement4) {\n  _inherits(ModalOpener, _HTMLElement4);\n\n  var _super5 = _createSuper(ModalOpener);\n\n  function ModalOpener() {\n    var _this9;\n\n    _classCallCheck(this, ModalOpener);\n\n    _this9 = _super5.call(this);\n\n    var button = _this9.querySelector('button');\n\n    if (!button) return _possibleConstructorReturn(_this9);\n    button.addEventListener('click', function () {\n      var modal = document.querySelector(_this9.getAttribute('data-modal'));\n      if (modal) modal.show(button);\n    });\n    return _this9;\n  }\n\n  return ModalOpener;\n}( /*#__PURE__*/_wrapNativeSuper(HTMLElement));\n\ncustomElements.define('modal-opener', ModalOpener);\n\nvar DeferredMedia = /*#__PURE__*/function (_HTMLElement5) {\n  _inherits(DeferredMedia, _HTMLElement5);\n\n  var _super6 = _createSuper(DeferredMedia);\n\n  function DeferredMedia() {\n    var _this10;\n\n    _classCallCheck(this, DeferredMedia);\n\n    _this10 = _super6.call(this);\n\n    var poster = _this10.querySelector('[id^=\"Deferred-Poster-\"]');\n\n    if (!poster) return _possibleConstructorReturn(_this10);\n    poster.addEventListener('click', _this10.loadContent.bind(_assertThisInitialized(_this10)));\n    return _this10;\n  }\n\n  _createClass(DeferredMedia, [{\n    key: \"loadContent\",\n    value: function loadContent() {\n      window.pauseAllMedia();\n\n      if (!this.getAttribute('loaded')) {\n        var content = document.createElement('div');\n        content.appendChild(this.querySelector('template').content.firstElementChild.cloneNode(true));\n        this.setAttribute('loaded', true);\n        this.appendChild(content.querySelector('video, model-viewer, iframe')).focus();\n      }\n    }\n  }]);\n\n  return DeferredMedia;\n}( /*#__PURE__*/_wrapNativeSuper(HTMLElement));\n\ncustomElements.define('deferred-media', DeferredMedia);\n\nvar SliderComponent = /*#__PURE__*/function (_HTMLElement6) {\n  _inherits(SliderComponent, _HTMLElement6);\n\n  var _super7 = _createSuper(SliderComponent);\n\n  function SliderComponent() {\n    var _this11;\n\n    _classCallCheck(this, SliderComponent);\n\n    _this11 = _super7.call(this);\n    _this11.slider = _this11.querySelector('ul');\n    _this11.sliderItems = _this11.querySelectorAll('li');\n    _this11.pageCount = _this11.querySelector('.slider-counter--current');\n    _this11.pageTotal = _this11.querySelector('.slider-counter--total');\n    _this11.prevButton = _this11.querySelector('button[name=\"previous\"]');\n    _this11.nextButton = _this11.querySelector('button[name=\"next\"]');\n    if (!_this11.slider || !_this11.nextButton) return _possibleConstructorReturn(_this11);\n    var resizeObserver = new ResizeObserver(function (entries) {\n      return _this11.initPages();\n    });\n    resizeObserver.observe(_this11.slider);\n\n    _this11.slider.addEventListener('scroll', _this11.update.bind(_assertThisInitialized(_this11)));\n\n    _this11.prevButton.addEventListener('click', _this11.onButtonClick.bind(_assertThisInitialized(_this11)));\n\n    _this11.nextButton.addEventListener('click', _this11.onButtonClick.bind(_assertThisInitialized(_this11)));\n\n    return _this11;\n  }\n\n  _createClass(SliderComponent, [{\n    key: \"initPages\",\n    value: function initPages() {\n      var sliderItemsToShow = Array.from(this.sliderItems).filter(function (element) {\n        return element.clientWidth > 0;\n      });\n      this.sliderLastItem = sliderItemsToShow[sliderItemsToShow.length - 1];\n      if (sliderItemsToShow.length === 0) return;\n      this.slidesPerPage = Math.floor(this.slider.clientWidth / sliderItemsToShow[0].clientWidth);\n      this.totalPages = sliderItemsToShow.length - this.slidesPerPage + 1;\n      this.update();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      if (!this.pageCount || !this.pageTotal) return;\n      this.currentPage = Math.round(this.slider.scrollLeft / this.sliderLastItem.clientWidth) + 1;\n\n      if (this.currentPage === 1) {\n        this.prevButton.setAttribute('disabled', true);\n      } else {\n        this.prevButton.removeAttribute('disabled');\n      }\n\n      if (this.currentPage === this.totalPages) {\n        this.nextButton.setAttribute('disabled', true);\n      } else {\n        this.nextButton.removeAttribute('disabled');\n      }\n\n      this.pageCount.textContent = this.currentPage;\n      this.pageTotal.textContent = this.totalPages;\n    }\n  }, {\n    key: \"onButtonClick\",\n    value: function onButtonClick(event) {\n      event.preventDefault();\n      var slideScrollPosition = event.currentTarget.name === 'next' ? this.slider.scrollLeft + this.sliderLastItem.clientWidth : this.slider.scrollLeft - this.sliderLastItem.clientWidth;\n      this.slider.scrollTo({\n        left: slideScrollPosition\n      });\n    }\n  }]);\n\n  return SliderComponent;\n}( /*#__PURE__*/_wrapNativeSuper(HTMLElement));\n\ncustomElements.define('slider-component', SliderComponent);\n\nvar VariantSelects = /*#__PURE__*/function (_HTMLElement7) {\n  _inherits(VariantSelects, _HTMLElement7);\n\n  var _super8 = _createSuper(VariantSelects);\n\n  function VariantSelects() {\n    var _this12;\n\n    _classCallCheck(this, VariantSelects);\n\n    _this12 = _super8.call(this);\n\n    _this12.addEventListener('change', _this12.onVariantChange);\n\n    return _this12;\n  }\n\n  _createClass(VariantSelects, [{\n    key: \"onVariantChange\",\n    value: function onVariantChange() {\n      this.updateOptions();\n      this.updateMasterId();\n      this.toggleAddButton(true, '', false);\n      this.updatePickupAvailability();\n      this.removeErrorMessage();\n\n      if (!this.currentVariant) {\n        this.toggleAddButton(true, '', true);\n        this.setUnavailable();\n      } else {\n        this.updateMedia();\n        this.updateURL();\n        this.updateVariantInput();\n        this.renderProductInfo();\n      }\n    }\n  }, {\n    key: \"updateOptions\",\n    value: function updateOptions() {\n      this.options = Array.from(this.querySelectorAll('select'), function (select) {\n        return select.value;\n      });\n    }\n  }, {\n    key: \"updateMasterId\",\n    value: function updateMasterId() {\n      var _this13 = this;\n\n      this.currentVariant = this.getVariantData().find(function (variant) {\n        return !variant.options.map(function (option, index) {\n          return _this13.options[index] === option;\n        }).includes(false);\n      });\n    }\n  }, {\n    key: \"updateMedia\",\n    value: function updateMedia() {\n      if (!this.currentVariant) return;\n      if (!this.currentVariant.featured_media) return;\n      var newMedia = document.querySelector(\"[data-media-id=\\\"\".concat(this.dataset.section, \"-\").concat(this.currentVariant.featured_media.id, \"\\\"]\"));\n      if (!newMedia) return;\n      var modalContent = document.querySelector(\"#ProductModal-\".concat(this.dataset.section, \" .product-media-modal__content\"));\n      var newMediaModal = modalContent.querySelector(\"[data-media-id=\\\"\".concat(this.currentVariant.featured_media.id, \"\\\"]\"));\n      var parent = newMedia.parentElement;\n      if (parent.firstChild == newMedia) return;\n      modalContent.prepend(newMediaModal);\n      parent.prepend(newMedia);\n      this.stickyHeader = this.stickyHeader || document.querySelector('sticky-header');\n\n      if (this.stickyHeader) {\n        this.stickyHeader.dispatchEvent(new Event('preventHeaderReveal'));\n      }\n\n      window.setTimeout(function () {\n        parent.querySelector('li.product__media-item').scrollIntoView({\n          behavior: \"smooth\"\n        });\n      });\n    }\n  }, {\n    key: \"updateURL\",\n    value: function updateURL() {\n      if (!this.currentVariant || this.dataset.updateUrl === 'false') return;\n      window.history.replaceState({}, '', \"\".concat(this.dataset.url, \"?variant=\").concat(this.currentVariant.id));\n    }\n  }, {\n    key: \"updateVariantInput\",\n    value: function updateVariantInput() {\n      var _this14 = this;\n\n      var productForms = document.querySelectorAll(\"#product-form-\".concat(this.dataset.section, \", #product-form-installment\"));\n      productForms.forEach(function (productForm) {\n        var input = productForm.querySelector('input[name=\"id\"]');\n        input.value = _this14.currentVariant.id;\n        input.dispatchEvent(new Event('change', {\n          bubbles: true\n        }));\n      });\n    }\n  }, {\n    key: \"updatePickupAvailability\",\n    value: function updatePickupAvailability() {\n      var pickUpAvailability = document.querySelector('pickup-availability');\n      if (!pickUpAvailability) return;\n\n      if (this.currentVariant && this.currentVariant.available) {\n        pickUpAvailability.fetchAvailability(this.currentVariant.id);\n      } else {\n        pickUpAvailability.removeAttribute('available');\n        pickUpAvailability.innerHTML = '';\n      }\n    }\n  }, {\n    key: \"removeErrorMessage\",\n    value: function removeErrorMessage() {\n      var section = this.closest('section');\n      if (!section) return;\n      var productForm = section.querySelector('product-form');\n      if (productForm) productForm.handleErrorMessage();\n    }\n  }, {\n    key: \"renderProductInfo\",\n    value: function renderProductInfo() {\n      var _this15 = this;\n\n      fetch(\"\".concat(this.dataset.url, \"?variant=\").concat(this.currentVariant.id, \"&section_id=\").concat(this.dataset.section)).then(function (response) {\n        return response.text();\n      }).then(function (responseText) {\n        var id = \"price-\".concat(_this15.dataset.section);\n        var html = new DOMParser().parseFromString(responseText, 'text/html');\n        var destination = document.getElementById(id);\n        var source = html.getElementById(id);\n        if (source && destination) destination.innerHTML = source.innerHTML;\n        var price = document.getElementById(\"price-\".concat(_this15.dataset.section));\n        if (price) price.classList.remove('visibility-hidden');\n\n        _this15.toggleAddButton(!_this15.currentVariant.available, window.variantStrings.soldOut);\n      });\n    }\n  }, {\n    key: \"toggleAddButton\",\n    value: function toggleAddButton() {\n      var disable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var text = arguments.length > 1 ? arguments[1] : undefined;\n      var modifyClass = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var productForm = document.getElementById(\"product-form-\".concat(this.dataset.section));\n      if (!productForm) return;\n      var addButton = productForm.querySelector('[name=\"add\"]');\n      if (!addButton) return;\n\n      if (disable) {\n        addButton.setAttribute('disabled', true);\n        if (text) addButton.textContent = text;\n      } else {\n        addButton.removeAttribute('disabled');\n        addButton.textContent = window.variantStrings.addToCart;\n      }\n\n      if (!modifyClass) return;\n    }\n  }, {\n    key: \"setUnavailable\",\n    value: function setUnavailable() {\n      var button = document.getElementById(\"product-form-\".concat(this.dataset.section));\n      var addButton = button.querySelector('[name=\"add\"]');\n      var price = document.getElementById(\"price-\".concat(this.dataset.section));\n      if (!addButton) return;\n      addButton.textContent = window.variantStrings.unavailable;\n      if (price) price.classList.add('visibility-hidden');\n    }\n  }, {\n    key: \"getVariantData\",\n    value: function getVariantData() {\n      this.variantData = this.variantData || JSON.parse(this.querySelector('[type=\"application/json\"]').textContent);\n      return this.variantData;\n    }\n  }]);\n\n  return VariantSelects;\n}( /*#__PURE__*/_wrapNativeSuper(HTMLElement));\n\ncustomElements.define('variant-selects', VariantSelects);\n\nvar VariantRadios = /*#__PURE__*/function (_VariantSelects) {\n  _inherits(VariantRadios, _VariantSelects);\n\n  var _super9 = _createSuper(VariantRadios);\n\n  function VariantRadios() {\n    _classCallCheck(this, VariantRadios);\n\n    return _super9.call(this);\n  }\n\n  _createClass(VariantRadios, [{\n    key: \"updateOptions\",\n    value: function updateOptions() {\n      var fieldsets = Array.from(this.querySelectorAll('fieldset'));\n      this.options = fieldsets.map(function (fieldset) {\n        return Array.from(fieldset.querySelectorAll('input')).find(function (radio) {\n          return radio.checked;\n        }).value;\n      });\n    }\n  }]);\n\n  return VariantRadios;\n}(VariantSelects);\n\ncustomElements.define('variant-radios', VariantRadios);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./js/main.js\n");

/***/ }),

/***/ "./scss/header.scss":
/*!**************************!*\
  !*** ./scss/header.scss ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zY3NzL2hlYWRlci5zY3NzP2VkZTkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiLi9zY3NzL2hlYWRlci5zY3NzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./scss/header.scss\n");

/***/ }),

/***/ "./scss/main.scss":
/*!************************!*\
  !*** ./scss/main.scss ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zY3NzL21haW4uc2Nzcz84NjI4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6Ii4vc2Nzcy9tYWluLnNjc3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./scss/main.scss\n");

/***/ }),

/***/ 0:
/*!**************************************************************!*\
  !*** multi ./js/main.js ./scss/main.scss ./scss/header.scss ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! /Users/dougalcrowder/Sites/Themelab_foundation/mm-src/js/main.js */"./js/main.js");
__webpack_require__(/*! /Users/dougalcrowder/Sites/Themelab_foundation/mm-src/scss/main.scss */"./scss/main.scss");
module.exports = __webpack_require__(/*! /Users/dougalcrowder/Sites/Themelab_foundation/mm-src/scss/header.scss */"./scss/header.scss");


/***/ })

/******/ });